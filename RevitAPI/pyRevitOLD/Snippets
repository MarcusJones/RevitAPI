

"""
categories = rvt_doc.Settings.Categories;
#print("{:40} | {:30} | {:30}".format("cat.Name", "cat.Id", "cat.Parent"))
cat_ids = list()    
for cat in categories:
    if cat.Name in util_ra.REVIT_CATEGORIES:
        cat_ids.append(cat.Id)


#util_ra.print_dir(rvt_db.BuiltInCategory)
print(rvt_db.BuiltInCategory)
raise
target_bics = list()
for bic in rvt_db.BuiltInCategory:
    for c_id in cat_ids:
        if c_id == bic.Id:
            target_bics.append(bic)

for bi in target_bics:
    print(bi)

#this_cat = rvt_db.BuiltInCategory(cat_ids[0])
#print(this_cat)
        #print(cat.Name)
    #else:
    #    print("NO:",cat.Name)
    #print("{:40} | {:30} | {:30}".format(cat.Name, cat.Id, cat.Parent))

#print(rvt_db.BuiltInCategory("Duct"))
raise
all_instance_IDs = util_ra.get_all_elements_IDs(rvt_doc)
#all_mep_IDs = util_ra.get_all_MEP_element_IDs(rvt_doc)

#print(all_instances[0])
#raise
#all_instances_ids = [el.Id for el in all_instances]
#all_mep_ids = [el.Id for el in all_mep]
# 
# for mep_el_id in all_mep_IDs:
#     if mep_el_id not in all_instance_IDs:
#         all_instance_IDs.append(mep_el_id)
#     else:
#         continue            


all_instances_merged = [util_ra.get_element_by_id(rvt_doc,el_id) 
                    for el_id in all_instance_IDs]


# 
# logging.info("Merged {} MEP elements, bringing total from {} to {}".format(len(all_mep_IDs),
#                                                                            len(all_instance_IDs),
#                                                                            len(all_instances_merged)))

#raise

# for el in all_instances_merged:
#     print(el)
"""

"""This is a dict of only INSTANCES in project"""
#el_dict_instances = util_ra.get_sort_all_FamilyInstance(rvt_doc)



"""

#     print(i)
#     print(elem)
#     print(elem.Id)
#     #print(elem.Id.Value)
#     print(elem.Category)
#     print(elem.Category.ToString())
#     print(elem.Category.Name)
#     print(elem.Category.Parent)
#     print(elem.Category.Id)
#     print("****")
#     util_ra.get_elem_BuiltInCategory(rvt_doc,elem)
#     raise
    #print("{} of {}".format(i,total))    
"""